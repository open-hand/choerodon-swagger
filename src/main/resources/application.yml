spring:
  application:
    name: choerodon-swagger
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://172.23.16.45:3306/hzero_admin?useUnicode=true&characterEncoding=utf-8&useSSL=false}
    username: ${SPRING_DATASOURCE_USERNAME:hzero}
    password: ${SPRING_DATASOURCE_PASSWORD:hzero}
    hikari:
      # 连接池最小空闲连接数
      minimum-idle: ${SPRING_DATASOURCE_MINIMUM_IDLE:20}
      # 连接池允许的最大连接数
      maximum-pool-size: ${SPRING_DATASOURCE_MAXIMUM_POOL_SIZE:200}
      # 等待连接池分配连接的最大时长（毫秒）
      connection-timeout: ${SPRING_DATASOURCE_CONNECTION_TIMEOUT:30000}
  redis:
    host: ${SPRING_REDIS_HOST:redis.hzero.org}
    port: ${SPRING_REDIS_PORT:6379}
    database: ${SPRING_REDIS_DATABASE:1}
    jedis:
      pool:
        # 资源池中最大连接数
        # 默认8，-1表示无限制；可根据服务并发redis情况及服务端的支持上限调整
        max-active: ${SPRING_REDIS_POOL_MAX_ACTIVE:50}
        # 资源池运行最大空闲的连接数
        # 默认8，-1表示无限制；可根据服务并发redis情况及服务端的支持上限调整，一般建议和max-active保持一致，避免资源伸缩带来的开销
        max-idle: ${SPRING_REDIS_POOL_MAX_IDLE:50}
        # 当资源池连接用尽后，调用者的最大等待时间(单位为毫秒)
        # 默认 -1 表示永不超时，设置5秒
        max-wait: ${SPRING_REDIS_POOL_MAX_WAIT:5000}

feign:
  hystrix:
    enabled: true

hystrix:
  threadpool:
    default:
      # 执行命令线程池的核心线程数，也是命令执行的最大并发量，默认10
      coreSize: ${HYSTRIX_THREADPOOL_DEFAULT_CORE_SIZE:128}
      # 最大执行线程数
      maximumSize: ${HYSTRIX_THREADPOOL_DEFAULT_MAXIMUM_SIZE:256}
  stream:
    queue:
      enabled: true
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            # hystrix熔断时间，12秒，需大于feign/ribbon的超时时间
            # 默认 1000 毫秒，最高设置 2000足矣。如果超时，首先看能不能优化接口相关业务、SQL查询等，不要盲目加大超时时间，否则会导致线程堆积过多，hystrix 线程池卡死，最终服务不可用。
            timeoutInMilliseconds: ${HYSTRIX_COMMAND_TIMEOUT_IN_MILLISECONDS:12000}

ribbon:
  # Ribbon从DiscoveryClient同步Server的间隔时间，默认30秒
  ServerListRefreshInterval: ${RIBBON_SERVER_LIST_REFRESH_INTERVAL:10000}
  # 客户端读取超时时间，超时时间要小于Hystrix的超时时间，否则重试机制就无意义了
  ReadTimeout: ${RIBBON_READ_TIMEOUT:5000}
  # 客户端连接超时时间
  ConnectTimeout: ${RIBBON_CONNECT_TIMEOUT:2000}
  # 默认只重试 GET，设置为true时将重试所有类型，如 POST、PUT、DELETE
  # 重试对Feign生效，对RestTemplate不生效，RestTemplate要重试需加入spring-retry依赖
  OkToRetryOnAllOperations: false
  # 同一个Server重试次数
  MaxAutoRetries: 0
  # 最多重试几个Server
  MaxAutoRetriesNextServer: 1

mybatis:
  mapperLocations: classpath*:/mapper/*.xml
  configuration:
    mapUnderscoreToCamelCase: true

hzero:
  service:
    platform:
      name: choerodon-platform
    oauth:
      name: choerodon-oauth
    iam:
      name: choerodon-iam
    file:
      name: choerodon-file
    message:
      name: choerodon-message
    admin:
      name: choerodon-admin
    swagger:
      name: choerodon-swagger
    gateway:
      name: choerodon-gateway
    monitor:
      name: choerodon-monitor
  swagger:
    client: ${HZERO_SWAGGER_CLIENT:client}
    skip-service: ${HZERO_SWAGGER_SKIP_SERVICE:register, gateway, oauth}
    enable-https: ${HZERO_SWAGGER_ENABLE_HTTPS:false}
    fetch-time: ${HZERO_SWAGGER_FETCH_TIME:20}
    fetch-seconds: ${HZERO_SWAGGER_FETCH_SECONDS:30}
logging:
  level:
    org.hzero: ${LOG_LEVEL:info}
    io.choerodon: ${LOG_LEVEL:info}
    org.springframework.web: ${LOG_LEVEL:info}
  path: ./logs

